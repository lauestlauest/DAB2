// <auto-generated />
using System;
using DABAssignment2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DABAssignment2.Migrations
{
    [DbContext(typeof(AUCanteens))]
    partial class AUCanteensModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DABAssignment2.Model.Canteens", b =>
                {
                    b.Property<string>("CanteenName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CanteenName");

                    b.ToTable("Canteens");
                });

            modelBuilder.Entity("DABAssignment2.Model.Customer", b =>
                {
                    b.Property<int>("CustomerCPR")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerCPR"));

                    b.HasKey("CustomerCPR");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("DABAssignment2.Model.JITItems", b =>
                {
                    b.Property<int>("JITItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JITItemsId"));

                    b.Property<string>("CanteenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JITMealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JITItemsId");

                    b.HasIndex("CanteenName");

                    b.ToTable("JITItems");
                });

            modelBuilder.Entity("DABAssignment2.Model.Ratings", b =>
                {
                    b.Property<int>("RatingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingsId"));

                    b.Property<string>("CanteenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CustomerCPR")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RatingsId");

                    b.HasIndex("CanteenName");

                    b.HasIndex("CustomerCPR");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("DABAssignment2.Model.Reservations", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealId"));

                    b.Property<string>("CanteenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CustomerCPR")
                        .HasColumnType("int");

                    b.Property<string>("MealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MealId");

                    b.HasIndex("CanteenName");

                    b.HasIndex("CustomerCPR");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("DABAssignment2.Model.JITItems", b =>
                {
                    b.HasOne("DABAssignment2.Model.Canteens", "Canteens")
                        .WithMany("JitItems")
                        .HasForeignKey("CanteenName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canteens");
                });

            modelBuilder.Entity("DABAssignment2.Model.Ratings", b =>
                {
                    b.HasOne("DABAssignment2.Model.Canteens", "Canteens")
                        .WithMany("Ratings")
                        .HasForeignKey("CanteenName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DABAssignment2.Model.Customer", "Customer")
                        .WithMany("Ratings")
                        .HasForeignKey("CustomerCPR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canteens");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DABAssignment2.Model.Reservations", b =>
                {
                    b.HasOne("DABAssignment2.Model.Canteens", "Canteens")
                        .WithMany("Reservations")
                        .HasForeignKey("CanteenName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DABAssignment2.Model.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerCPR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canteens");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DABAssignment2.Model.Canteens", b =>
                {
                    b.Navigation("JitItems");

                    b.Navigation("Ratings");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("DABAssignment2.Model.Customer", b =>
                {
                    b.Navigation("Ratings");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
