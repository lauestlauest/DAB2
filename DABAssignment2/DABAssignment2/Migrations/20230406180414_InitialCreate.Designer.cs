// <auto-generated />
using System;
using DABAssignment2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DABAssignment2.Migrations
{
    [DbContext(typeof(AUCanteens))]
    [Migration("20230406180414_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DABAssignment2.Model.Canteens", b =>
                {
                    b.Property<string>("CanteenName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CanteenName");

                    b.ToTable("Canteens");
                });

            modelBuilder.Entity("DABAssignment2.Model.Customer", b =>
                {
                    b.Property<int>("CustomerCPR")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerCPR"));

                    b.HasKey("CustomerCPR");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("DABAssignment2.Model.Menu", b =>
                {
                    b.Property<int>("MenuItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemsId"));

                    b.Property<string>("CanteenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MealName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MealType")
                        .HasColumnType("int");

                    b.HasKey("MenuItemsId");

                    b.HasIndex("CanteenName");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("DABAssignment2.Model.Ratings", b =>
                {
                    b.Property<int>("RatingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingsId"));

                    b.Property<string>("CanteenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CustomerCPR")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RatingsId");

                    b.HasIndex("CanteenName");

                    b.HasIndex("CustomerCPR");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("DABAssignment2.Model.Reservations", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealId"));

                    b.Property<string>("CanteenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CustomerCPR")
                        .HasColumnType("int");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.HasKey("MealId");

                    b.HasIndex("CanteenName");

                    b.HasIndex("CustomerCPR");

                    b.HasIndex("MenuItemId")
                        .IsUnique();

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("DABAssignment2.Model.Menu", b =>
                {
                    b.HasOne("DABAssignment2.Model.Canteens", "Canteens")
                        .WithMany("Menu")
                        .HasForeignKey("CanteenName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canteens");
                });

            modelBuilder.Entity("DABAssignment2.Model.Ratings", b =>
                {
                    b.HasOne("DABAssignment2.Model.Canteens", "Canteens")
                        .WithMany("Ratings")
                        .HasForeignKey("CanteenName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DABAssignment2.Model.Customer", "Customer")
                        .WithMany("Ratings")
                        .HasForeignKey("CustomerCPR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canteens");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DABAssignment2.Model.Reservations", b =>
                {
                    b.HasOne("DABAssignment2.Model.Canteens", "Canteens")
                        .WithMany("Reservations")
                        .HasForeignKey("CanteenName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DABAssignment2.Model.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerCPR");

                    b.HasOne("DABAssignment2.Model.Menu", "Menu")
                        .WithOne("Reservations")
                        .HasForeignKey("DABAssignment2.Model.Reservations", "MenuItemId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Canteens");

                    b.Navigation("Customer");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("DABAssignment2.Model.Canteens", b =>
                {
                    b.Navigation("Menu");

                    b.Navigation("Ratings");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("DABAssignment2.Model.Customer", b =>
                {
                    b.Navigation("Ratings");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("DABAssignment2.Model.Menu", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
